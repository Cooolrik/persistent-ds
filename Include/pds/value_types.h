// WARNING! DO NOT EDIT THIS FILE! This file is generated.

// Generated by pds - Persistent data structure framework, Copyright (c) 2022 Ulrik Lindahl
// Generator code licensed under the MIT license https://github.com/Cooolrik/pds/blob/main/LICENSE

#pragma once
#ifndef __PDS__VALUE_TYPES_H__
#define __PDS__VALUE_TYPES_H__

#include <vector>

#include "element_types.h"
#include "container_types.h"

// Lists information of value types: a combination of data type and container, 
// even when the container is "none" and the data type is used directly.
// (Value types are the types used for the values which are used in Items/Entites).

namespace pds
{

// template to clear a value type
template <class _Ty> void clear_value_type( _Ty& value_type );

// bool
template<> struct value_type_information<bool>
{
	typedef bool data_type;
	static constexpr element_type_index type_index = element_type_index::dt_bool; // the element type index of bool ( dt_bool )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of bool ( dt_none )
};

// optional_value<bool>
template<> struct value_type_information<optional_value<bool>>
{
	typedef bool data_type;
	static constexpr element_type_index type_index = element_type_index::dt_bool; // the element type index of optional_value<bool> ( dt_bool )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<bool> ( dt_optional_value )
};

// vector<bool>
template<> struct value_type_information<vector<bool>>
{
	typedef bool data_type;
	static constexpr element_type_index type_index = element_type_index::dt_bool; // the element type index of vector<bool> ( dt_bool )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<bool> ( dt_vector )
};

// optional_vector<bool>
template<> struct value_type_information<optional_vector<bool>>
{
	typedef bool data_type;
	static constexpr element_type_index type_index = element_type_index::dt_bool; // the element type index of optional_vector<bool> ( dt_bool )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<bool> ( dt_optional_vector )
};

// idx_vector<bool>
template<> struct value_type_information<idx_vector<bool>>
{
	typedef bool data_type;
	static constexpr element_type_index type_index = element_type_index::dt_bool; // the element type index of idx_vector<bool> ( dt_bool )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<bool> ( dt_idx_vector )
};

// optional_idx_vector<bool>
template<> struct value_type_information<optional_idx_vector<bool>>
{
	typedef bool data_type;
	static constexpr element_type_index type_index = element_type_index::dt_bool; // the element type index of optional_idx_vector<bool> ( dt_bool )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<bool> ( dt_optional_idx_vector )
};

// i8
template<> struct value_type_information<i8>
{
	typedef i8 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8; // the element type index of i8 ( dt_i8 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i8 ( dt_none )
};

// optional_value<i8>
template<> struct value_type_information<optional_value<i8>>
{
	typedef i8 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8; // the element type index of optional_value<i8> ( dt_i8 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i8> ( dt_optional_value )
};

// vector<i8>
template<> struct value_type_information<vector<i8>>
{
	typedef i8 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8; // the element type index of vector<i8> ( dt_i8 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i8> ( dt_vector )
};

// optional_vector<i8>
template<> struct value_type_information<optional_vector<i8>>
{
	typedef i8 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8; // the element type index of optional_vector<i8> ( dt_i8 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i8> ( dt_optional_vector )
};

// idx_vector<i8>
template<> struct value_type_information<idx_vector<i8>>
{
	typedef i8 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8; // the element type index of idx_vector<i8> ( dt_i8 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i8> ( dt_idx_vector )
};

// optional_idx_vector<i8>
template<> struct value_type_information<optional_idx_vector<i8>>
{
	typedef i8 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8; // the element type index of optional_idx_vector<i8> ( dt_i8 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i8> ( dt_optional_idx_vector )
};

// i16
template<> struct value_type_information<i16>
{
	typedef i16 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16; // the element type index of i16 ( dt_i16 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i16 ( dt_none )
};

// optional_value<i16>
template<> struct value_type_information<optional_value<i16>>
{
	typedef i16 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16; // the element type index of optional_value<i16> ( dt_i16 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i16> ( dt_optional_value )
};

// vector<i16>
template<> struct value_type_information<vector<i16>>
{
	typedef i16 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16; // the element type index of vector<i16> ( dt_i16 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i16> ( dt_vector )
};

// optional_vector<i16>
template<> struct value_type_information<optional_vector<i16>>
{
	typedef i16 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16; // the element type index of optional_vector<i16> ( dt_i16 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i16> ( dt_optional_vector )
};

// idx_vector<i16>
template<> struct value_type_information<idx_vector<i16>>
{
	typedef i16 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16; // the element type index of idx_vector<i16> ( dt_i16 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i16> ( dt_idx_vector )
};

// optional_idx_vector<i16>
template<> struct value_type_information<optional_idx_vector<i16>>
{
	typedef i16 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16; // the element type index of optional_idx_vector<i16> ( dt_i16 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i16> ( dt_optional_idx_vector )
};

// i32
template<> struct value_type_information<i32>
{
	typedef i32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32; // the element type index of i32 ( dt_i32 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i32 ( dt_none )
};

// optional_value<i32>
template<> struct value_type_information<optional_value<i32>>
{
	typedef i32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32; // the element type index of optional_value<i32> ( dt_i32 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i32> ( dt_optional_value )
};

// vector<i32>
template<> struct value_type_information<vector<i32>>
{
	typedef i32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32; // the element type index of vector<i32> ( dt_i32 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i32> ( dt_vector )
};

// optional_vector<i32>
template<> struct value_type_information<optional_vector<i32>>
{
	typedef i32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32; // the element type index of optional_vector<i32> ( dt_i32 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i32> ( dt_optional_vector )
};

// idx_vector<i32>
template<> struct value_type_information<idx_vector<i32>>
{
	typedef i32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32; // the element type index of idx_vector<i32> ( dt_i32 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i32> ( dt_idx_vector )
};

// optional_idx_vector<i32>
template<> struct value_type_information<optional_idx_vector<i32>>
{
	typedef i32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32; // the element type index of optional_idx_vector<i32> ( dt_i32 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i32> ( dt_optional_idx_vector )
};

// i64
template<> struct value_type_information<i64>
{
	typedef i64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64; // the element type index of i64 ( dt_i64 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i64 ( dt_none )
};

// optional_value<i64>
template<> struct value_type_information<optional_value<i64>>
{
	typedef i64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64; // the element type index of optional_value<i64> ( dt_i64 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i64> ( dt_optional_value )
};

// vector<i64>
template<> struct value_type_information<vector<i64>>
{
	typedef i64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64; // the element type index of vector<i64> ( dt_i64 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i64> ( dt_vector )
};

// optional_vector<i64>
template<> struct value_type_information<optional_vector<i64>>
{
	typedef i64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64; // the element type index of optional_vector<i64> ( dt_i64 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i64> ( dt_optional_vector )
};

// idx_vector<i64>
template<> struct value_type_information<idx_vector<i64>>
{
	typedef i64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64; // the element type index of idx_vector<i64> ( dt_i64 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i64> ( dt_idx_vector )
};

// optional_idx_vector<i64>
template<> struct value_type_information<optional_idx_vector<i64>>
{
	typedef i64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64; // the element type index of optional_idx_vector<i64> ( dt_i64 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i64> ( dt_optional_idx_vector )
};

// u8
template<> struct value_type_information<u8>
{
	typedef u8 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8; // the element type index of u8 ( dt_u8 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u8 ( dt_none )
};

// optional_value<u8>
template<> struct value_type_information<optional_value<u8>>
{
	typedef u8 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8; // the element type index of optional_value<u8> ( dt_u8 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u8> ( dt_optional_value )
};

// vector<u8>
template<> struct value_type_information<vector<u8>>
{
	typedef u8 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8; // the element type index of vector<u8> ( dt_u8 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u8> ( dt_vector )
};

// optional_vector<u8>
template<> struct value_type_information<optional_vector<u8>>
{
	typedef u8 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8; // the element type index of optional_vector<u8> ( dt_u8 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u8> ( dt_optional_vector )
};

// idx_vector<u8>
template<> struct value_type_information<idx_vector<u8>>
{
	typedef u8 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8; // the element type index of idx_vector<u8> ( dt_u8 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u8> ( dt_idx_vector )
};

// optional_idx_vector<u8>
template<> struct value_type_information<optional_idx_vector<u8>>
{
	typedef u8 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8; // the element type index of optional_idx_vector<u8> ( dt_u8 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u8> ( dt_optional_idx_vector )
};

// u16
template<> struct value_type_information<u16>
{
	typedef u16 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16; // the element type index of u16 ( dt_u16 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u16 ( dt_none )
};

// optional_value<u16>
template<> struct value_type_information<optional_value<u16>>
{
	typedef u16 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16; // the element type index of optional_value<u16> ( dt_u16 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u16> ( dt_optional_value )
};

// vector<u16>
template<> struct value_type_information<vector<u16>>
{
	typedef u16 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16; // the element type index of vector<u16> ( dt_u16 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u16> ( dt_vector )
};

// optional_vector<u16>
template<> struct value_type_information<optional_vector<u16>>
{
	typedef u16 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16; // the element type index of optional_vector<u16> ( dt_u16 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u16> ( dt_optional_vector )
};

// idx_vector<u16>
template<> struct value_type_information<idx_vector<u16>>
{
	typedef u16 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16; // the element type index of idx_vector<u16> ( dt_u16 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u16> ( dt_idx_vector )
};

// optional_idx_vector<u16>
template<> struct value_type_information<optional_idx_vector<u16>>
{
	typedef u16 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16; // the element type index of optional_idx_vector<u16> ( dt_u16 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u16> ( dt_optional_idx_vector )
};

// u32
template<> struct value_type_information<u32>
{
	typedef u32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32; // the element type index of u32 ( dt_u32 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u32 ( dt_none )
};

// optional_value<u32>
template<> struct value_type_information<optional_value<u32>>
{
	typedef u32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32; // the element type index of optional_value<u32> ( dt_u32 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u32> ( dt_optional_value )
};

// vector<u32>
template<> struct value_type_information<vector<u32>>
{
	typedef u32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32; // the element type index of vector<u32> ( dt_u32 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u32> ( dt_vector )
};

// optional_vector<u32>
template<> struct value_type_information<optional_vector<u32>>
{
	typedef u32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32; // the element type index of optional_vector<u32> ( dt_u32 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u32> ( dt_optional_vector )
};

// idx_vector<u32>
template<> struct value_type_information<idx_vector<u32>>
{
	typedef u32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32; // the element type index of idx_vector<u32> ( dt_u32 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u32> ( dt_idx_vector )
};

// optional_idx_vector<u32>
template<> struct value_type_information<optional_idx_vector<u32>>
{
	typedef u32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32; // the element type index of optional_idx_vector<u32> ( dt_u32 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u32> ( dt_optional_idx_vector )
};

// u64
template<> struct value_type_information<u64>
{
	typedef u64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64; // the element type index of u64 ( dt_u64 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u64 ( dt_none )
};

// optional_value<u64>
template<> struct value_type_information<optional_value<u64>>
{
	typedef u64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64; // the element type index of optional_value<u64> ( dt_u64 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u64> ( dt_optional_value )
};

// vector<u64>
template<> struct value_type_information<vector<u64>>
{
	typedef u64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64; // the element type index of vector<u64> ( dt_u64 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u64> ( dt_vector )
};

// optional_vector<u64>
template<> struct value_type_information<optional_vector<u64>>
{
	typedef u64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64; // the element type index of optional_vector<u64> ( dt_u64 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u64> ( dt_optional_vector )
};

// idx_vector<u64>
template<> struct value_type_information<idx_vector<u64>>
{
	typedef u64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64; // the element type index of idx_vector<u64> ( dt_u64 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u64> ( dt_idx_vector )
};

// optional_idx_vector<u64>
template<> struct value_type_information<optional_idx_vector<u64>>
{
	typedef u64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64; // the element type index of optional_idx_vector<u64> ( dt_u64 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u64> ( dt_optional_idx_vector )
};

// f32
template<> struct value_type_information<f32>
{
	typedef f32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32; // the element type index of f32 ( dt_f32 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f32 ( dt_none )
};

// optional_value<f32>
template<> struct value_type_information<optional_value<f32>>
{
	typedef f32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32; // the element type index of optional_value<f32> ( dt_f32 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f32> ( dt_optional_value )
};

// vector<f32>
template<> struct value_type_information<vector<f32>>
{
	typedef f32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32; // the element type index of vector<f32> ( dt_f32 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f32> ( dt_vector )
};

// optional_vector<f32>
template<> struct value_type_information<optional_vector<f32>>
{
	typedef f32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32; // the element type index of optional_vector<f32> ( dt_f32 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f32> ( dt_optional_vector )
};

// idx_vector<f32>
template<> struct value_type_information<idx_vector<f32>>
{
	typedef f32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32; // the element type index of idx_vector<f32> ( dt_f32 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f32> ( dt_idx_vector )
};

// optional_idx_vector<f32>
template<> struct value_type_information<optional_idx_vector<f32>>
{
	typedef f32 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32; // the element type index of optional_idx_vector<f32> ( dt_f32 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f32> ( dt_optional_idx_vector )
};

// f64
template<> struct value_type_information<f64>
{
	typedef f64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64; // the element type index of f64 ( dt_f64 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f64 ( dt_none )
};

// optional_value<f64>
template<> struct value_type_information<optional_value<f64>>
{
	typedef f64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64; // the element type index of optional_value<f64> ( dt_f64 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f64> ( dt_optional_value )
};

// vector<f64>
template<> struct value_type_information<vector<f64>>
{
	typedef f64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64; // the element type index of vector<f64> ( dt_f64 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f64> ( dt_vector )
};

// optional_vector<f64>
template<> struct value_type_information<optional_vector<f64>>
{
	typedef f64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64; // the element type index of optional_vector<f64> ( dt_f64 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f64> ( dt_optional_vector )
};

// idx_vector<f64>
template<> struct value_type_information<idx_vector<f64>>
{
	typedef f64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64; // the element type index of idx_vector<f64> ( dt_f64 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f64> ( dt_idx_vector )
};

// optional_idx_vector<f64>
template<> struct value_type_information<optional_idx_vector<f64>>
{
	typedef f64 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64; // the element type index of optional_idx_vector<f64> ( dt_f64 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f64> ( dt_optional_idx_vector )
};

// f32vec2
template<> struct value_type_information<f32vec2>
{
	typedef f32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec2; // the element type index of f32vec2 ( dt_f32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f32vec2 ( dt_none )
};

// optional_value<f32vec2>
template<> struct value_type_information<optional_value<f32vec2>>
{
	typedef f32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec2; // the element type index of optional_value<f32vec2> ( dt_f32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f32vec2> ( dt_optional_value )
};

// vector<f32vec2>
template<> struct value_type_information<vector<f32vec2>>
{
	typedef f32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec2; // the element type index of vector<f32vec2> ( dt_f32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f32vec2> ( dt_vector )
};

// optional_vector<f32vec2>
template<> struct value_type_information<optional_vector<f32vec2>>
{
	typedef f32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec2; // the element type index of optional_vector<f32vec2> ( dt_f32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f32vec2> ( dt_optional_vector )
};

// idx_vector<f32vec2>
template<> struct value_type_information<idx_vector<f32vec2>>
{
	typedef f32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec2; // the element type index of idx_vector<f32vec2> ( dt_f32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f32vec2> ( dt_idx_vector )
};

// optional_idx_vector<f32vec2>
template<> struct value_type_information<optional_idx_vector<f32vec2>>
{
	typedef f32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec2; // the element type index of optional_idx_vector<f32vec2> ( dt_f32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f32vec2> ( dt_optional_idx_vector )
};

// f64vec2
template<> struct value_type_information<f64vec2>
{
	typedef f64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec2; // the element type index of f64vec2 ( dt_f64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f64vec2 ( dt_none )
};

// optional_value<f64vec2>
template<> struct value_type_information<optional_value<f64vec2>>
{
	typedef f64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec2; // the element type index of optional_value<f64vec2> ( dt_f64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f64vec2> ( dt_optional_value )
};

// vector<f64vec2>
template<> struct value_type_information<vector<f64vec2>>
{
	typedef f64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec2; // the element type index of vector<f64vec2> ( dt_f64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f64vec2> ( dt_vector )
};

// optional_vector<f64vec2>
template<> struct value_type_information<optional_vector<f64vec2>>
{
	typedef f64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec2; // the element type index of optional_vector<f64vec2> ( dt_f64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f64vec2> ( dt_optional_vector )
};

// idx_vector<f64vec2>
template<> struct value_type_information<idx_vector<f64vec2>>
{
	typedef f64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec2; // the element type index of idx_vector<f64vec2> ( dt_f64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f64vec2> ( dt_idx_vector )
};

// optional_idx_vector<f64vec2>
template<> struct value_type_information<optional_idx_vector<f64vec2>>
{
	typedef f64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec2; // the element type index of optional_idx_vector<f64vec2> ( dt_f64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f64vec2> ( dt_optional_idx_vector )
};

// f32vec3
template<> struct value_type_information<f32vec3>
{
	typedef f32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec3; // the element type index of f32vec3 ( dt_f32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f32vec3 ( dt_none )
};

// optional_value<f32vec3>
template<> struct value_type_information<optional_value<f32vec3>>
{
	typedef f32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec3; // the element type index of optional_value<f32vec3> ( dt_f32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f32vec3> ( dt_optional_value )
};

// vector<f32vec3>
template<> struct value_type_information<vector<f32vec3>>
{
	typedef f32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec3; // the element type index of vector<f32vec3> ( dt_f32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f32vec3> ( dt_vector )
};

// optional_vector<f32vec3>
template<> struct value_type_information<optional_vector<f32vec3>>
{
	typedef f32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec3; // the element type index of optional_vector<f32vec3> ( dt_f32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f32vec3> ( dt_optional_vector )
};

// idx_vector<f32vec3>
template<> struct value_type_information<idx_vector<f32vec3>>
{
	typedef f32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec3; // the element type index of idx_vector<f32vec3> ( dt_f32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f32vec3> ( dt_idx_vector )
};

// optional_idx_vector<f32vec3>
template<> struct value_type_information<optional_idx_vector<f32vec3>>
{
	typedef f32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec3; // the element type index of optional_idx_vector<f32vec3> ( dt_f32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f32vec3> ( dt_optional_idx_vector )
};

// f64vec3
template<> struct value_type_information<f64vec3>
{
	typedef f64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec3; // the element type index of f64vec3 ( dt_f64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f64vec3 ( dt_none )
};

// optional_value<f64vec3>
template<> struct value_type_information<optional_value<f64vec3>>
{
	typedef f64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec3; // the element type index of optional_value<f64vec3> ( dt_f64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f64vec3> ( dt_optional_value )
};

// vector<f64vec3>
template<> struct value_type_information<vector<f64vec3>>
{
	typedef f64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec3; // the element type index of vector<f64vec3> ( dt_f64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f64vec3> ( dt_vector )
};

// optional_vector<f64vec3>
template<> struct value_type_information<optional_vector<f64vec3>>
{
	typedef f64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec3; // the element type index of optional_vector<f64vec3> ( dt_f64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f64vec3> ( dt_optional_vector )
};

// idx_vector<f64vec3>
template<> struct value_type_information<idx_vector<f64vec3>>
{
	typedef f64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec3; // the element type index of idx_vector<f64vec3> ( dt_f64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f64vec3> ( dt_idx_vector )
};

// optional_idx_vector<f64vec3>
template<> struct value_type_information<optional_idx_vector<f64vec3>>
{
	typedef f64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec3; // the element type index of optional_idx_vector<f64vec3> ( dt_f64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f64vec3> ( dt_optional_idx_vector )
};

// f32vec4
template<> struct value_type_information<f32vec4>
{
	typedef f32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec4; // the element type index of f32vec4 ( dt_f32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f32vec4 ( dt_none )
};

// optional_value<f32vec4>
template<> struct value_type_information<optional_value<f32vec4>>
{
	typedef f32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec4; // the element type index of optional_value<f32vec4> ( dt_f32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f32vec4> ( dt_optional_value )
};

// vector<f32vec4>
template<> struct value_type_information<vector<f32vec4>>
{
	typedef f32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec4; // the element type index of vector<f32vec4> ( dt_f32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f32vec4> ( dt_vector )
};

// optional_vector<f32vec4>
template<> struct value_type_information<optional_vector<f32vec4>>
{
	typedef f32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec4; // the element type index of optional_vector<f32vec4> ( dt_f32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f32vec4> ( dt_optional_vector )
};

// idx_vector<f32vec4>
template<> struct value_type_information<idx_vector<f32vec4>>
{
	typedef f32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec4; // the element type index of idx_vector<f32vec4> ( dt_f32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f32vec4> ( dt_idx_vector )
};

// optional_idx_vector<f32vec4>
template<> struct value_type_information<optional_idx_vector<f32vec4>>
{
	typedef f32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32vec4; // the element type index of optional_idx_vector<f32vec4> ( dt_f32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f32vec4> ( dt_optional_idx_vector )
};

// f64vec4
template<> struct value_type_information<f64vec4>
{
	typedef f64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec4; // the element type index of f64vec4 ( dt_f64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f64vec4 ( dt_none )
};

// optional_value<f64vec4>
template<> struct value_type_information<optional_value<f64vec4>>
{
	typedef f64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec4; // the element type index of optional_value<f64vec4> ( dt_f64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f64vec4> ( dt_optional_value )
};

// vector<f64vec4>
template<> struct value_type_information<vector<f64vec4>>
{
	typedef f64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec4; // the element type index of vector<f64vec4> ( dt_f64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f64vec4> ( dt_vector )
};

// optional_vector<f64vec4>
template<> struct value_type_information<optional_vector<f64vec4>>
{
	typedef f64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec4; // the element type index of optional_vector<f64vec4> ( dt_f64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f64vec4> ( dt_optional_vector )
};

// idx_vector<f64vec4>
template<> struct value_type_information<idx_vector<f64vec4>>
{
	typedef f64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec4; // the element type index of idx_vector<f64vec4> ( dt_f64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f64vec4> ( dt_idx_vector )
};

// optional_idx_vector<f64vec4>
template<> struct value_type_information<optional_idx_vector<f64vec4>>
{
	typedef f64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64vec4; // the element type index of optional_idx_vector<f64vec4> ( dt_f64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f64vec4> ( dt_optional_idx_vector )
};

// i8vec2
template<> struct value_type_information<i8vec2>
{
	typedef i8vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec2; // the element type index of i8vec2 ( dt_i8vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i8vec2 ( dt_none )
};

// optional_value<i8vec2>
template<> struct value_type_information<optional_value<i8vec2>>
{
	typedef i8vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec2; // the element type index of optional_value<i8vec2> ( dt_i8vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i8vec2> ( dt_optional_value )
};

// vector<i8vec2>
template<> struct value_type_information<vector<i8vec2>>
{
	typedef i8vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec2; // the element type index of vector<i8vec2> ( dt_i8vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i8vec2> ( dt_vector )
};

// optional_vector<i8vec2>
template<> struct value_type_information<optional_vector<i8vec2>>
{
	typedef i8vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec2; // the element type index of optional_vector<i8vec2> ( dt_i8vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i8vec2> ( dt_optional_vector )
};

// idx_vector<i8vec2>
template<> struct value_type_information<idx_vector<i8vec2>>
{
	typedef i8vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec2; // the element type index of idx_vector<i8vec2> ( dt_i8vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i8vec2> ( dt_idx_vector )
};

// optional_idx_vector<i8vec2>
template<> struct value_type_information<optional_idx_vector<i8vec2>>
{
	typedef i8vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec2; // the element type index of optional_idx_vector<i8vec2> ( dt_i8vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i8vec2> ( dt_optional_idx_vector )
};

// i16vec2
template<> struct value_type_information<i16vec2>
{
	typedef i16vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec2; // the element type index of i16vec2 ( dt_i16vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i16vec2 ( dt_none )
};

// optional_value<i16vec2>
template<> struct value_type_information<optional_value<i16vec2>>
{
	typedef i16vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec2; // the element type index of optional_value<i16vec2> ( dt_i16vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i16vec2> ( dt_optional_value )
};

// vector<i16vec2>
template<> struct value_type_information<vector<i16vec2>>
{
	typedef i16vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec2; // the element type index of vector<i16vec2> ( dt_i16vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i16vec2> ( dt_vector )
};

// optional_vector<i16vec2>
template<> struct value_type_information<optional_vector<i16vec2>>
{
	typedef i16vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec2; // the element type index of optional_vector<i16vec2> ( dt_i16vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i16vec2> ( dt_optional_vector )
};

// idx_vector<i16vec2>
template<> struct value_type_information<idx_vector<i16vec2>>
{
	typedef i16vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec2; // the element type index of idx_vector<i16vec2> ( dt_i16vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i16vec2> ( dt_idx_vector )
};

// optional_idx_vector<i16vec2>
template<> struct value_type_information<optional_idx_vector<i16vec2>>
{
	typedef i16vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec2; // the element type index of optional_idx_vector<i16vec2> ( dt_i16vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i16vec2> ( dt_optional_idx_vector )
};

// i32vec2
template<> struct value_type_information<i32vec2>
{
	typedef i32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec2; // the element type index of i32vec2 ( dt_i32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i32vec2 ( dt_none )
};

// optional_value<i32vec2>
template<> struct value_type_information<optional_value<i32vec2>>
{
	typedef i32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec2; // the element type index of optional_value<i32vec2> ( dt_i32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i32vec2> ( dt_optional_value )
};

// vector<i32vec2>
template<> struct value_type_information<vector<i32vec2>>
{
	typedef i32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec2; // the element type index of vector<i32vec2> ( dt_i32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i32vec2> ( dt_vector )
};

// optional_vector<i32vec2>
template<> struct value_type_information<optional_vector<i32vec2>>
{
	typedef i32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec2; // the element type index of optional_vector<i32vec2> ( dt_i32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i32vec2> ( dt_optional_vector )
};

// idx_vector<i32vec2>
template<> struct value_type_information<idx_vector<i32vec2>>
{
	typedef i32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec2; // the element type index of idx_vector<i32vec2> ( dt_i32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i32vec2> ( dt_idx_vector )
};

// optional_idx_vector<i32vec2>
template<> struct value_type_information<optional_idx_vector<i32vec2>>
{
	typedef i32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec2; // the element type index of optional_idx_vector<i32vec2> ( dt_i32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i32vec2> ( dt_optional_idx_vector )
};

// i64vec2
template<> struct value_type_information<i64vec2>
{
	typedef i64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec2; // the element type index of i64vec2 ( dt_i64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i64vec2 ( dt_none )
};

// optional_value<i64vec2>
template<> struct value_type_information<optional_value<i64vec2>>
{
	typedef i64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec2; // the element type index of optional_value<i64vec2> ( dt_i64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i64vec2> ( dt_optional_value )
};

// vector<i64vec2>
template<> struct value_type_information<vector<i64vec2>>
{
	typedef i64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec2; // the element type index of vector<i64vec2> ( dt_i64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i64vec2> ( dt_vector )
};

// optional_vector<i64vec2>
template<> struct value_type_information<optional_vector<i64vec2>>
{
	typedef i64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec2; // the element type index of optional_vector<i64vec2> ( dt_i64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i64vec2> ( dt_optional_vector )
};

// idx_vector<i64vec2>
template<> struct value_type_information<idx_vector<i64vec2>>
{
	typedef i64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec2; // the element type index of idx_vector<i64vec2> ( dt_i64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i64vec2> ( dt_idx_vector )
};

// optional_idx_vector<i64vec2>
template<> struct value_type_information<optional_idx_vector<i64vec2>>
{
	typedef i64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec2; // the element type index of optional_idx_vector<i64vec2> ( dt_i64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i64vec2> ( dt_optional_idx_vector )
};

// i8vec3
template<> struct value_type_information<i8vec3>
{
	typedef i8vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec3; // the element type index of i8vec3 ( dt_i8vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i8vec3 ( dt_none )
};

// optional_value<i8vec3>
template<> struct value_type_information<optional_value<i8vec3>>
{
	typedef i8vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec3; // the element type index of optional_value<i8vec3> ( dt_i8vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i8vec3> ( dt_optional_value )
};

// vector<i8vec3>
template<> struct value_type_information<vector<i8vec3>>
{
	typedef i8vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec3; // the element type index of vector<i8vec3> ( dt_i8vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i8vec3> ( dt_vector )
};

// optional_vector<i8vec3>
template<> struct value_type_information<optional_vector<i8vec3>>
{
	typedef i8vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec3; // the element type index of optional_vector<i8vec3> ( dt_i8vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i8vec3> ( dt_optional_vector )
};

// idx_vector<i8vec3>
template<> struct value_type_information<idx_vector<i8vec3>>
{
	typedef i8vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec3; // the element type index of idx_vector<i8vec3> ( dt_i8vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i8vec3> ( dt_idx_vector )
};

// optional_idx_vector<i8vec3>
template<> struct value_type_information<optional_idx_vector<i8vec3>>
{
	typedef i8vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec3; // the element type index of optional_idx_vector<i8vec3> ( dt_i8vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i8vec3> ( dt_optional_idx_vector )
};

// i16vec3
template<> struct value_type_information<i16vec3>
{
	typedef i16vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec3; // the element type index of i16vec3 ( dt_i16vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i16vec3 ( dt_none )
};

// optional_value<i16vec3>
template<> struct value_type_information<optional_value<i16vec3>>
{
	typedef i16vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec3; // the element type index of optional_value<i16vec3> ( dt_i16vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i16vec3> ( dt_optional_value )
};

// vector<i16vec3>
template<> struct value_type_information<vector<i16vec3>>
{
	typedef i16vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec3; // the element type index of vector<i16vec3> ( dt_i16vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i16vec3> ( dt_vector )
};

// optional_vector<i16vec3>
template<> struct value_type_information<optional_vector<i16vec3>>
{
	typedef i16vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec3; // the element type index of optional_vector<i16vec3> ( dt_i16vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i16vec3> ( dt_optional_vector )
};

// idx_vector<i16vec3>
template<> struct value_type_information<idx_vector<i16vec3>>
{
	typedef i16vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec3; // the element type index of idx_vector<i16vec3> ( dt_i16vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i16vec3> ( dt_idx_vector )
};

// optional_idx_vector<i16vec3>
template<> struct value_type_information<optional_idx_vector<i16vec3>>
{
	typedef i16vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec3; // the element type index of optional_idx_vector<i16vec3> ( dt_i16vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i16vec3> ( dt_optional_idx_vector )
};

// i32vec3
template<> struct value_type_information<i32vec3>
{
	typedef i32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec3; // the element type index of i32vec3 ( dt_i32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i32vec3 ( dt_none )
};

// optional_value<i32vec3>
template<> struct value_type_information<optional_value<i32vec3>>
{
	typedef i32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec3; // the element type index of optional_value<i32vec3> ( dt_i32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i32vec3> ( dt_optional_value )
};

// vector<i32vec3>
template<> struct value_type_information<vector<i32vec3>>
{
	typedef i32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec3; // the element type index of vector<i32vec3> ( dt_i32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i32vec3> ( dt_vector )
};

// optional_vector<i32vec3>
template<> struct value_type_information<optional_vector<i32vec3>>
{
	typedef i32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec3; // the element type index of optional_vector<i32vec3> ( dt_i32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i32vec3> ( dt_optional_vector )
};

// idx_vector<i32vec3>
template<> struct value_type_information<idx_vector<i32vec3>>
{
	typedef i32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec3; // the element type index of idx_vector<i32vec3> ( dt_i32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i32vec3> ( dt_idx_vector )
};

// optional_idx_vector<i32vec3>
template<> struct value_type_information<optional_idx_vector<i32vec3>>
{
	typedef i32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec3; // the element type index of optional_idx_vector<i32vec3> ( dt_i32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i32vec3> ( dt_optional_idx_vector )
};

// i64vec3
template<> struct value_type_information<i64vec3>
{
	typedef i64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec3; // the element type index of i64vec3 ( dt_i64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i64vec3 ( dt_none )
};

// optional_value<i64vec3>
template<> struct value_type_information<optional_value<i64vec3>>
{
	typedef i64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec3; // the element type index of optional_value<i64vec3> ( dt_i64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i64vec3> ( dt_optional_value )
};

// vector<i64vec3>
template<> struct value_type_information<vector<i64vec3>>
{
	typedef i64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec3; // the element type index of vector<i64vec3> ( dt_i64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i64vec3> ( dt_vector )
};

// optional_vector<i64vec3>
template<> struct value_type_information<optional_vector<i64vec3>>
{
	typedef i64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec3; // the element type index of optional_vector<i64vec3> ( dt_i64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i64vec3> ( dt_optional_vector )
};

// idx_vector<i64vec3>
template<> struct value_type_information<idx_vector<i64vec3>>
{
	typedef i64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec3; // the element type index of idx_vector<i64vec3> ( dt_i64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i64vec3> ( dt_idx_vector )
};

// optional_idx_vector<i64vec3>
template<> struct value_type_information<optional_idx_vector<i64vec3>>
{
	typedef i64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec3; // the element type index of optional_idx_vector<i64vec3> ( dt_i64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i64vec3> ( dt_optional_idx_vector )
};

// i8vec4
template<> struct value_type_information<i8vec4>
{
	typedef i8vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec4; // the element type index of i8vec4 ( dt_i8vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i8vec4 ( dt_none )
};

// optional_value<i8vec4>
template<> struct value_type_information<optional_value<i8vec4>>
{
	typedef i8vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec4; // the element type index of optional_value<i8vec4> ( dt_i8vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i8vec4> ( dt_optional_value )
};

// vector<i8vec4>
template<> struct value_type_information<vector<i8vec4>>
{
	typedef i8vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec4; // the element type index of vector<i8vec4> ( dt_i8vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i8vec4> ( dt_vector )
};

// optional_vector<i8vec4>
template<> struct value_type_information<optional_vector<i8vec4>>
{
	typedef i8vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec4; // the element type index of optional_vector<i8vec4> ( dt_i8vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i8vec4> ( dt_optional_vector )
};

// idx_vector<i8vec4>
template<> struct value_type_information<idx_vector<i8vec4>>
{
	typedef i8vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec4; // the element type index of idx_vector<i8vec4> ( dt_i8vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i8vec4> ( dt_idx_vector )
};

// optional_idx_vector<i8vec4>
template<> struct value_type_information<optional_idx_vector<i8vec4>>
{
	typedef i8vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i8vec4; // the element type index of optional_idx_vector<i8vec4> ( dt_i8vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i8vec4> ( dt_optional_idx_vector )
};

// i16vec4
template<> struct value_type_information<i16vec4>
{
	typedef i16vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec4; // the element type index of i16vec4 ( dt_i16vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i16vec4 ( dt_none )
};

// optional_value<i16vec4>
template<> struct value_type_information<optional_value<i16vec4>>
{
	typedef i16vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec4; // the element type index of optional_value<i16vec4> ( dt_i16vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i16vec4> ( dt_optional_value )
};

// vector<i16vec4>
template<> struct value_type_information<vector<i16vec4>>
{
	typedef i16vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec4; // the element type index of vector<i16vec4> ( dt_i16vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i16vec4> ( dt_vector )
};

// optional_vector<i16vec4>
template<> struct value_type_information<optional_vector<i16vec4>>
{
	typedef i16vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec4; // the element type index of optional_vector<i16vec4> ( dt_i16vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i16vec4> ( dt_optional_vector )
};

// idx_vector<i16vec4>
template<> struct value_type_information<idx_vector<i16vec4>>
{
	typedef i16vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec4; // the element type index of idx_vector<i16vec4> ( dt_i16vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i16vec4> ( dt_idx_vector )
};

// optional_idx_vector<i16vec4>
template<> struct value_type_information<optional_idx_vector<i16vec4>>
{
	typedef i16vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i16vec4; // the element type index of optional_idx_vector<i16vec4> ( dt_i16vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i16vec4> ( dt_optional_idx_vector )
};

// i32vec4
template<> struct value_type_information<i32vec4>
{
	typedef i32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec4; // the element type index of i32vec4 ( dt_i32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i32vec4 ( dt_none )
};

// optional_value<i32vec4>
template<> struct value_type_information<optional_value<i32vec4>>
{
	typedef i32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec4; // the element type index of optional_value<i32vec4> ( dt_i32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i32vec4> ( dt_optional_value )
};

// vector<i32vec4>
template<> struct value_type_information<vector<i32vec4>>
{
	typedef i32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec4; // the element type index of vector<i32vec4> ( dt_i32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i32vec4> ( dt_vector )
};

// optional_vector<i32vec4>
template<> struct value_type_information<optional_vector<i32vec4>>
{
	typedef i32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec4; // the element type index of optional_vector<i32vec4> ( dt_i32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i32vec4> ( dt_optional_vector )
};

// idx_vector<i32vec4>
template<> struct value_type_information<idx_vector<i32vec4>>
{
	typedef i32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec4; // the element type index of idx_vector<i32vec4> ( dt_i32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i32vec4> ( dt_idx_vector )
};

// optional_idx_vector<i32vec4>
template<> struct value_type_information<optional_idx_vector<i32vec4>>
{
	typedef i32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i32vec4; // the element type index of optional_idx_vector<i32vec4> ( dt_i32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i32vec4> ( dt_optional_idx_vector )
};

// i64vec4
template<> struct value_type_information<i64vec4>
{
	typedef i64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec4; // the element type index of i64vec4 ( dt_i64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of i64vec4 ( dt_none )
};

// optional_value<i64vec4>
template<> struct value_type_information<optional_value<i64vec4>>
{
	typedef i64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec4; // the element type index of optional_value<i64vec4> ( dt_i64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<i64vec4> ( dt_optional_value )
};

// vector<i64vec4>
template<> struct value_type_information<vector<i64vec4>>
{
	typedef i64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec4; // the element type index of vector<i64vec4> ( dt_i64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<i64vec4> ( dt_vector )
};

// optional_vector<i64vec4>
template<> struct value_type_information<optional_vector<i64vec4>>
{
	typedef i64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec4; // the element type index of optional_vector<i64vec4> ( dt_i64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<i64vec4> ( dt_optional_vector )
};

// idx_vector<i64vec4>
template<> struct value_type_information<idx_vector<i64vec4>>
{
	typedef i64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec4; // the element type index of idx_vector<i64vec4> ( dt_i64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<i64vec4> ( dt_idx_vector )
};

// optional_idx_vector<i64vec4>
template<> struct value_type_information<optional_idx_vector<i64vec4>>
{
	typedef i64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_i64vec4; // the element type index of optional_idx_vector<i64vec4> ( dt_i64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<i64vec4> ( dt_optional_idx_vector )
};

// u8vec2
template<> struct value_type_information<u8vec2>
{
	typedef u8vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec2; // the element type index of u8vec2 ( dt_u8vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u8vec2 ( dt_none )
};

// optional_value<u8vec2>
template<> struct value_type_information<optional_value<u8vec2>>
{
	typedef u8vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec2; // the element type index of optional_value<u8vec2> ( dt_u8vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u8vec2> ( dt_optional_value )
};

// vector<u8vec2>
template<> struct value_type_information<vector<u8vec2>>
{
	typedef u8vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec2; // the element type index of vector<u8vec2> ( dt_u8vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u8vec2> ( dt_vector )
};

// optional_vector<u8vec2>
template<> struct value_type_information<optional_vector<u8vec2>>
{
	typedef u8vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec2; // the element type index of optional_vector<u8vec2> ( dt_u8vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u8vec2> ( dt_optional_vector )
};

// idx_vector<u8vec2>
template<> struct value_type_information<idx_vector<u8vec2>>
{
	typedef u8vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec2; // the element type index of idx_vector<u8vec2> ( dt_u8vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u8vec2> ( dt_idx_vector )
};

// optional_idx_vector<u8vec2>
template<> struct value_type_information<optional_idx_vector<u8vec2>>
{
	typedef u8vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec2; // the element type index of optional_idx_vector<u8vec2> ( dt_u8vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u8vec2> ( dt_optional_idx_vector )
};

// u16vec2
template<> struct value_type_information<u16vec2>
{
	typedef u16vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec2; // the element type index of u16vec2 ( dt_u16vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u16vec2 ( dt_none )
};

// optional_value<u16vec2>
template<> struct value_type_information<optional_value<u16vec2>>
{
	typedef u16vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec2; // the element type index of optional_value<u16vec2> ( dt_u16vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u16vec2> ( dt_optional_value )
};

// vector<u16vec2>
template<> struct value_type_information<vector<u16vec2>>
{
	typedef u16vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec2; // the element type index of vector<u16vec2> ( dt_u16vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u16vec2> ( dt_vector )
};

// optional_vector<u16vec2>
template<> struct value_type_information<optional_vector<u16vec2>>
{
	typedef u16vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec2; // the element type index of optional_vector<u16vec2> ( dt_u16vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u16vec2> ( dt_optional_vector )
};

// idx_vector<u16vec2>
template<> struct value_type_information<idx_vector<u16vec2>>
{
	typedef u16vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec2; // the element type index of idx_vector<u16vec2> ( dt_u16vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u16vec2> ( dt_idx_vector )
};

// optional_idx_vector<u16vec2>
template<> struct value_type_information<optional_idx_vector<u16vec2>>
{
	typedef u16vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec2; // the element type index of optional_idx_vector<u16vec2> ( dt_u16vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u16vec2> ( dt_optional_idx_vector )
};

// u32vec2
template<> struct value_type_information<u32vec2>
{
	typedef u32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec2; // the element type index of u32vec2 ( dt_u32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u32vec2 ( dt_none )
};

// optional_value<u32vec2>
template<> struct value_type_information<optional_value<u32vec2>>
{
	typedef u32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec2; // the element type index of optional_value<u32vec2> ( dt_u32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u32vec2> ( dt_optional_value )
};

// vector<u32vec2>
template<> struct value_type_information<vector<u32vec2>>
{
	typedef u32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec2; // the element type index of vector<u32vec2> ( dt_u32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u32vec2> ( dt_vector )
};

// optional_vector<u32vec2>
template<> struct value_type_information<optional_vector<u32vec2>>
{
	typedef u32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec2; // the element type index of optional_vector<u32vec2> ( dt_u32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u32vec2> ( dt_optional_vector )
};

// idx_vector<u32vec2>
template<> struct value_type_information<idx_vector<u32vec2>>
{
	typedef u32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec2; // the element type index of idx_vector<u32vec2> ( dt_u32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u32vec2> ( dt_idx_vector )
};

// optional_idx_vector<u32vec2>
template<> struct value_type_information<optional_idx_vector<u32vec2>>
{
	typedef u32vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec2; // the element type index of optional_idx_vector<u32vec2> ( dt_u32vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u32vec2> ( dt_optional_idx_vector )
};

// u64vec2
template<> struct value_type_information<u64vec2>
{
	typedef u64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec2; // the element type index of u64vec2 ( dt_u64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u64vec2 ( dt_none )
};

// optional_value<u64vec2>
template<> struct value_type_information<optional_value<u64vec2>>
{
	typedef u64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec2; // the element type index of optional_value<u64vec2> ( dt_u64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u64vec2> ( dt_optional_value )
};

// vector<u64vec2>
template<> struct value_type_information<vector<u64vec2>>
{
	typedef u64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec2; // the element type index of vector<u64vec2> ( dt_u64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u64vec2> ( dt_vector )
};

// optional_vector<u64vec2>
template<> struct value_type_information<optional_vector<u64vec2>>
{
	typedef u64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec2; // the element type index of optional_vector<u64vec2> ( dt_u64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u64vec2> ( dt_optional_vector )
};

// idx_vector<u64vec2>
template<> struct value_type_information<idx_vector<u64vec2>>
{
	typedef u64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec2; // the element type index of idx_vector<u64vec2> ( dt_u64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u64vec2> ( dt_idx_vector )
};

// optional_idx_vector<u64vec2>
template<> struct value_type_information<optional_idx_vector<u64vec2>>
{
	typedef u64vec2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec2; // the element type index of optional_idx_vector<u64vec2> ( dt_u64vec2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u64vec2> ( dt_optional_idx_vector )
};

// u8vec3
template<> struct value_type_information<u8vec3>
{
	typedef u8vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec3; // the element type index of u8vec3 ( dt_u8vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u8vec3 ( dt_none )
};

// optional_value<u8vec3>
template<> struct value_type_information<optional_value<u8vec3>>
{
	typedef u8vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec3; // the element type index of optional_value<u8vec3> ( dt_u8vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u8vec3> ( dt_optional_value )
};

// vector<u8vec3>
template<> struct value_type_information<vector<u8vec3>>
{
	typedef u8vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec3; // the element type index of vector<u8vec3> ( dt_u8vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u8vec3> ( dt_vector )
};

// optional_vector<u8vec3>
template<> struct value_type_information<optional_vector<u8vec3>>
{
	typedef u8vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec3; // the element type index of optional_vector<u8vec3> ( dt_u8vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u8vec3> ( dt_optional_vector )
};

// idx_vector<u8vec3>
template<> struct value_type_information<idx_vector<u8vec3>>
{
	typedef u8vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec3; // the element type index of idx_vector<u8vec3> ( dt_u8vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u8vec3> ( dt_idx_vector )
};

// optional_idx_vector<u8vec3>
template<> struct value_type_information<optional_idx_vector<u8vec3>>
{
	typedef u8vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec3; // the element type index of optional_idx_vector<u8vec3> ( dt_u8vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u8vec3> ( dt_optional_idx_vector )
};

// u16vec3
template<> struct value_type_information<u16vec3>
{
	typedef u16vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec3; // the element type index of u16vec3 ( dt_u16vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u16vec3 ( dt_none )
};

// optional_value<u16vec3>
template<> struct value_type_information<optional_value<u16vec3>>
{
	typedef u16vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec3; // the element type index of optional_value<u16vec3> ( dt_u16vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u16vec3> ( dt_optional_value )
};

// vector<u16vec3>
template<> struct value_type_information<vector<u16vec3>>
{
	typedef u16vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec3; // the element type index of vector<u16vec3> ( dt_u16vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u16vec3> ( dt_vector )
};

// optional_vector<u16vec3>
template<> struct value_type_information<optional_vector<u16vec3>>
{
	typedef u16vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec3; // the element type index of optional_vector<u16vec3> ( dt_u16vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u16vec3> ( dt_optional_vector )
};

// idx_vector<u16vec3>
template<> struct value_type_information<idx_vector<u16vec3>>
{
	typedef u16vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec3; // the element type index of idx_vector<u16vec3> ( dt_u16vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u16vec3> ( dt_idx_vector )
};

// optional_idx_vector<u16vec3>
template<> struct value_type_information<optional_idx_vector<u16vec3>>
{
	typedef u16vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec3; // the element type index of optional_idx_vector<u16vec3> ( dt_u16vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u16vec3> ( dt_optional_idx_vector )
};

// u32vec3
template<> struct value_type_information<u32vec3>
{
	typedef u32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec3; // the element type index of u32vec3 ( dt_u32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u32vec3 ( dt_none )
};

// optional_value<u32vec3>
template<> struct value_type_information<optional_value<u32vec3>>
{
	typedef u32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec3; // the element type index of optional_value<u32vec3> ( dt_u32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u32vec3> ( dt_optional_value )
};

// vector<u32vec3>
template<> struct value_type_information<vector<u32vec3>>
{
	typedef u32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec3; // the element type index of vector<u32vec3> ( dt_u32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u32vec3> ( dt_vector )
};

// optional_vector<u32vec3>
template<> struct value_type_information<optional_vector<u32vec3>>
{
	typedef u32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec3; // the element type index of optional_vector<u32vec3> ( dt_u32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u32vec3> ( dt_optional_vector )
};

// idx_vector<u32vec3>
template<> struct value_type_information<idx_vector<u32vec3>>
{
	typedef u32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec3; // the element type index of idx_vector<u32vec3> ( dt_u32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u32vec3> ( dt_idx_vector )
};

// optional_idx_vector<u32vec3>
template<> struct value_type_information<optional_idx_vector<u32vec3>>
{
	typedef u32vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec3; // the element type index of optional_idx_vector<u32vec3> ( dt_u32vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u32vec3> ( dt_optional_idx_vector )
};

// u64vec3
template<> struct value_type_information<u64vec3>
{
	typedef u64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec3; // the element type index of u64vec3 ( dt_u64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u64vec3 ( dt_none )
};

// optional_value<u64vec3>
template<> struct value_type_information<optional_value<u64vec3>>
{
	typedef u64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec3; // the element type index of optional_value<u64vec3> ( dt_u64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u64vec3> ( dt_optional_value )
};

// vector<u64vec3>
template<> struct value_type_information<vector<u64vec3>>
{
	typedef u64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec3; // the element type index of vector<u64vec3> ( dt_u64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u64vec3> ( dt_vector )
};

// optional_vector<u64vec3>
template<> struct value_type_information<optional_vector<u64vec3>>
{
	typedef u64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec3; // the element type index of optional_vector<u64vec3> ( dt_u64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u64vec3> ( dt_optional_vector )
};

// idx_vector<u64vec3>
template<> struct value_type_information<idx_vector<u64vec3>>
{
	typedef u64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec3; // the element type index of idx_vector<u64vec3> ( dt_u64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u64vec3> ( dt_idx_vector )
};

// optional_idx_vector<u64vec3>
template<> struct value_type_information<optional_idx_vector<u64vec3>>
{
	typedef u64vec3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec3; // the element type index of optional_idx_vector<u64vec3> ( dt_u64vec3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u64vec3> ( dt_optional_idx_vector )
};

// u8vec4
template<> struct value_type_information<u8vec4>
{
	typedef u8vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec4; // the element type index of u8vec4 ( dt_u8vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u8vec4 ( dt_none )
};

// optional_value<u8vec4>
template<> struct value_type_information<optional_value<u8vec4>>
{
	typedef u8vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec4; // the element type index of optional_value<u8vec4> ( dt_u8vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u8vec4> ( dt_optional_value )
};

// vector<u8vec4>
template<> struct value_type_information<vector<u8vec4>>
{
	typedef u8vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec4; // the element type index of vector<u8vec4> ( dt_u8vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u8vec4> ( dt_vector )
};

// optional_vector<u8vec4>
template<> struct value_type_information<optional_vector<u8vec4>>
{
	typedef u8vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec4; // the element type index of optional_vector<u8vec4> ( dt_u8vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u8vec4> ( dt_optional_vector )
};

// idx_vector<u8vec4>
template<> struct value_type_information<idx_vector<u8vec4>>
{
	typedef u8vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec4; // the element type index of idx_vector<u8vec4> ( dt_u8vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u8vec4> ( dt_idx_vector )
};

// optional_idx_vector<u8vec4>
template<> struct value_type_information<optional_idx_vector<u8vec4>>
{
	typedef u8vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u8vec4; // the element type index of optional_idx_vector<u8vec4> ( dt_u8vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u8vec4> ( dt_optional_idx_vector )
};

// u16vec4
template<> struct value_type_information<u16vec4>
{
	typedef u16vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec4; // the element type index of u16vec4 ( dt_u16vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u16vec4 ( dt_none )
};

// optional_value<u16vec4>
template<> struct value_type_information<optional_value<u16vec4>>
{
	typedef u16vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec4; // the element type index of optional_value<u16vec4> ( dt_u16vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u16vec4> ( dt_optional_value )
};

// vector<u16vec4>
template<> struct value_type_information<vector<u16vec4>>
{
	typedef u16vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec4; // the element type index of vector<u16vec4> ( dt_u16vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u16vec4> ( dt_vector )
};

// optional_vector<u16vec4>
template<> struct value_type_information<optional_vector<u16vec4>>
{
	typedef u16vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec4; // the element type index of optional_vector<u16vec4> ( dt_u16vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u16vec4> ( dt_optional_vector )
};

// idx_vector<u16vec4>
template<> struct value_type_information<idx_vector<u16vec4>>
{
	typedef u16vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec4; // the element type index of idx_vector<u16vec4> ( dt_u16vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u16vec4> ( dt_idx_vector )
};

// optional_idx_vector<u16vec4>
template<> struct value_type_information<optional_idx_vector<u16vec4>>
{
	typedef u16vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u16vec4; // the element type index of optional_idx_vector<u16vec4> ( dt_u16vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u16vec4> ( dt_optional_idx_vector )
};

// u32vec4
template<> struct value_type_information<u32vec4>
{
	typedef u32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec4; // the element type index of u32vec4 ( dt_u32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u32vec4 ( dt_none )
};

// optional_value<u32vec4>
template<> struct value_type_information<optional_value<u32vec4>>
{
	typedef u32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec4; // the element type index of optional_value<u32vec4> ( dt_u32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u32vec4> ( dt_optional_value )
};

// vector<u32vec4>
template<> struct value_type_information<vector<u32vec4>>
{
	typedef u32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec4; // the element type index of vector<u32vec4> ( dt_u32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u32vec4> ( dt_vector )
};

// optional_vector<u32vec4>
template<> struct value_type_information<optional_vector<u32vec4>>
{
	typedef u32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec4; // the element type index of optional_vector<u32vec4> ( dt_u32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u32vec4> ( dt_optional_vector )
};

// idx_vector<u32vec4>
template<> struct value_type_information<idx_vector<u32vec4>>
{
	typedef u32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec4; // the element type index of idx_vector<u32vec4> ( dt_u32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u32vec4> ( dt_idx_vector )
};

// optional_idx_vector<u32vec4>
template<> struct value_type_information<optional_idx_vector<u32vec4>>
{
	typedef u32vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u32vec4; // the element type index of optional_idx_vector<u32vec4> ( dt_u32vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u32vec4> ( dt_optional_idx_vector )
};

// u64vec4
template<> struct value_type_information<u64vec4>
{
	typedef u64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec4; // the element type index of u64vec4 ( dt_u64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of u64vec4 ( dt_none )
};

// optional_value<u64vec4>
template<> struct value_type_information<optional_value<u64vec4>>
{
	typedef u64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec4; // the element type index of optional_value<u64vec4> ( dt_u64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<u64vec4> ( dt_optional_value )
};

// vector<u64vec4>
template<> struct value_type_information<vector<u64vec4>>
{
	typedef u64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec4; // the element type index of vector<u64vec4> ( dt_u64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<u64vec4> ( dt_vector )
};

// optional_vector<u64vec4>
template<> struct value_type_information<optional_vector<u64vec4>>
{
	typedef u64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec4; // the element type index of optional_vector<u64vec4> ( dt_u64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<u64vec4> ( dt_optional_vector )
};

// idx_vector<u64vec4>
template<> struct value_type_information<idx_vector<u64vec4>>
{
	typedef u64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec4; // the element type index of idx_vector<u64vec4> ( dt_u64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<u64vec4> ( dt_idx_vector )
};

// optional_idx_vector<u64vec4>
template<> struct value_type_information<optional_idx_vector<u64vec4>>
{
	typedef u64vec4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_u64vec4; // the element type index of optional_idx_vector<u64vec4> ( dt_u64vec4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<u64vec4> ( dt_optional_idx_vector )
};

// f32mat2
template<> struct value_type_information<f32mat2>
{
	typedef f32mat2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat2; // the element type index of f32mat2 ( dt_f32mat2 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f32mat2 ( dt_none )
};

// optional_value<f32mat2>
template<> struct value_type_information<optional_value<f32mat2>>
{
	typedef f32mat2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat2; // the element type index of optional_value<f32mat2> ( dt_f32mat2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f32mat2> ( dt_optional_value )
};

// vector<f32mat2>
template<> struct value_type_information<vector<f32mat2>>
{
	typedef f32mat2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat2; // the element type index of vector<f32mat2> ( dt_f32mat2 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f32mat2> ( dt_vector )
};

// optional_vector<f32mat2>
template<> struct value_type_information<optional_vector<f32mat2>>
{
	typedef f32mat2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat2; // the element type index of optional_vector<f32mat2> ( dt_f32mat2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f32mat2> ( dt_optional_vector )
};

// idx_vector<f32mat2>
template<> struct value_type_information<idx_vector<f32mat2>>
{
	typedef f32mat2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat2; // the element type index of idx_vector<f32mat2> ( dt_f32mat2 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f32mat2> ( dt_idx_vector )
};

// optional_idx_vector<f32mat2>
template<> struct value_type_information<optional_idx_vector<f32mat2>>
{
	typedef f32mat2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat2; // the element type index of optional_idx_vector<f32mat2> ( dt_f32mat2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f32mat2> ( dt_optional_idx_vector )
};

// f64mat2
template<> struct value_type_information<f64mat2>
{
	typedef f64mat2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat2; // the element type index of f64mat2 ( dt_f64mat2 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f64mat2 ( dt_none )
};

// optional_value<f64mat2>
template<> struct value_type_information<optional_value<f64mat2>>
{
	typedef f64mat2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat2; // the element type index of optional_value<f64mat2> ( dt_f64mat2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f64mat2> ( dt_optional_value )
};

// vector<f64mat2>
template<> struct value_type_information<vector<f64mat2>>
{
	typedef f64mat2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat2; // the element type index of vector<f64mat2> ( dt_f64mat2 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f64mat2> ( dt_vector )
};

// optional_vector<f64mat2>
template<> struct value_type_information<optional_vector<f64mat2>>
{
	typedef f64mat2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat2; // the element type index of optional_vector<f64mat2> ( dt_f64mat2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f64mat2> ( dt_optional_vector )
};

// idx_vector<f64mat2>
template<> struct value_type_information<idx_vector<f64mat2>>
{
	typedef f64mat2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat2; // the element type index of idx_vector<f64mat2> ( dt_f64mat2 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f64mat2> ( dt_idx_vector )
};

// optional_idx_vector<f64mat2>
template<> struct value_type_information<optional_idx_vector<f64mat2>>
{
	typedef f64mat2 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat2; // the element type index of optional_idx_vector<f64mat2> ( dt_f64mat2 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f64mat2> ( dt_optional_idx_vector )
};

// f32mat3
template<> struct value_type_information<f32mat3>
{
	typedef f32mat3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat3; // the element type index of f32mat3 ( dt_f32mat3 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f32mat3 ( dt_none )
};

// optional_value<f32mat3>
template<> struct value_type_information<optional_value<f32mat3>>
{
	typedef f32mat3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat3; // the element type index of optional_value<f32mat3> ( dt_f32mat3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f32mat3> ( dt_optional_value )
};

// vector<f32mat3>
template<> struct value_type_information<vector<f32mat3>>
{
	typedef f32mat3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat3; // the element type index of vector<f32mat3> ( dt_f32mat3 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f32mat3> ( dt_vector )
};

// optional_vector<f32mat3>
template<> struct value_type_information<optional_vector<f32mat3>>
{
	typedef f32mat3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat3; // the element type index of optional_vector<f32mat3> ( dt_f32mat3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f32mat3> ( dt_optional_vector )
};

// idx_vector<f32mat3>
template<> struct value_type_information<idx_vector<f32mat3>>
{
	typedef f32mat3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat3; // the element type index of idx_vector<f32mat3> ( dt_f32mat3 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f32mat3> ( dt_idx_vector )
};

// optional_idx_vector<f32mat3>
template<> struct value_type_information<optional_idx_vector<f32mat3>>
{
	typedef f32mat3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat3; // the element type index of optional_idx_vector<f32mat3> ( dt_f32mat3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f32mat3> ( dt_optional_idx_vector )
};

// f64mat3
template<> struct value_type_information<f64mat3>
{
	typedef f64mat3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat3; // the element type index of f64mat3 ( dt_f64mat3 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f64mat3 ( dt_none )
};

// optional_value<f64mat3>
template<> struct value_type_information<optional_value<f64mat3>>
{
	typedef f64mat3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat3; // the element type index of optional_value<f64mat3> ( dt_f64mat3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f64mat3> ( dt_optional_value )
};

// vector<f64mat3>
template<> struct value_type_information<vector<f64mat3>>
{
	typedef f64mat3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat3; // the element type index of vector<f64mat3> ( dt_f64mat3 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f64mat3> ( dt_vector )
};

// optional_vector<f64mat3>
template<> struct value_type_information<optional_vector<f64mat3>>
{
	typedef f64mat3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat3; // the element type index of optional_vector<f64mat3> ( dt_f64mat3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f64mat3> ( dt_optional_vector )
};

// idx_vector<f64mat3>
template<> struct value_type_information<idx_vector<f64mat3>>
{
	typedef f64mat3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat3; // the element type index of idx_vector<f64mat3> ( dt_f64mat3 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f64mat3> ( dt_idx_vector )
};

// optional_idx_vector<f64mat3>
template<> struct value_type_information<optional_idx_vector<f64mat3>>
{
	typedef f64mat3 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat3; // the element type index of optional_idx_vector<f64mat3> ( dt_f64mat3 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f64mat3> ( dt_optional_idx_vector )
};

// f32mat4
template<> struct value_type_information<f32mat4>
{
	typedef f32mat4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat4; // the element type index of f32mat4 ( dt_f32mat4 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f32mat4 ( dt_none )
};

// optional_value<f32mat4>
template<> struct value_type_information<optional_value<f32mat4>>
{
	typedef f32mat4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat4; // the element type index of optional_value<f32mat4> ( dt_f32mat4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f32mat4> ( dt_optional_value )
};

// vector<f32mat4>
template<> struct value_type_information<vector<f32mat4>>
{
	typedef f32mat4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat4; // the element type index of vector<f32mat4> ( dt_f32mat4 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f32mat4> ( dt_vector )
};

// optional_vector<f32mat4>
template<> struct value_type_information<optional_vector<f32mat4>>
{
	typedef f32mat4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat4; // the element type index of optional_vector<f32mat4> ( dt_f32mat4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f32mat4> ( dt_optional_vector )
};

// idx_vector<f32mat4>
template<> struct value_type_information<idx_vector<f32mat4>>
{
	typedef f32mat4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat4; // the element type index of idx_vector<f32mat4> ( dt_f32mat4 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f32mat4> ( dt_idx_vector )
};

// optional_idx_vector<f32mat4>
template<> struct value_type_information<optional_idx_vector<f32mat4>>
{
	typedef f32mat4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32mat4; // the element type index of optional_idx_vector<f32mat4> ( dt_f32mat4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f32mat4> ( dt_optional_idx_vector )
};

// f64mat4
template<> struct value_type_information<f64mat4>
{
	typedef f64mat4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat4; // the element type index of f64mat4 ( dt_f64mat4 )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f64mat4 ( dt_none )
};

// optional_value<f64mat4>
template<> struct value_type_information<optional_value<f64mat4>>
{
	typedef f64mat4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat4; // the element type index of optional_value<f64mat4> ( dt_f64mat4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f64mat4> ( dt_optional_value )
};

// vector<f64mat4>
template<> struct value_type_information<vector<f64mat4>>
{
	typedef f64mat4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat4; // the element type index of vector<f64mat4> ( dt_f64mat4 )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f64mat4> ( dt_vector )
};

// optional_vector<f64mat4>
template<> struct value_type_information<optional_vector<f64mat4>>
{
	typedef f64mat4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat4; // the element type index of optional_vector<f64mat4> ( dt_f64mat4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f64mat4> ( dt_optional_vector )
};

// idx_vector<f64mat4>
template<> struct value_type_information<idx_vector<f64mat4>>
{
	typedef f64mat4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat4; // the element type index of idx_vector<f64mat4> ( dt_f64mat4 )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f64mat4> ( dt_idx_vector )
};

// optional_idx_vector<f64mat4>
template<> struct value_type_information<optional_idx_vector<f64mat4>>
{
	typedef f64mat4 data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64mat4; // the element type index of optional_idx_vector<f64mat4> ( dt_f64mat4 )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f64mat4> ( dt_optional_idx_vector )
};

// f32quat
template<> struct value_type_information<f32quat>
{
	typedef f32quat data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32quat; // the element type index of f32quat ( dt_f32quat )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f32quat ( dt_none )
};

// optional_value<f32quat>
template<> struct value_type_information<optional_value<f32quat>>
{
	typedef f32quat data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32quat; // the element type index of optional_value<f32quat> ( dt_f32quat )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f32quat> ( dt_optional_value )
};

// vector<f32quat>
template<> struct value_type_information<vector<f32quat>>
{
	typedef f32quat data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32quat; // the element type index of vector<f32quat> ( dt_f32quat )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f32quat> ( dt_vector )
};

// optional_vector<f32quat>
template<> struct value_type_information<optional_vector<f32quat>>
{
	typedef f32quat data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32quat; // the element type index of optional_vector<f32quat> ( dt_f32quat )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f32quat> ( dt_optional_vector )
};

// idx_vector<f32quat>
template<> struct value_type_information<idx_vector<f32quat>>
{
	typedef f32quat data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32quat; // the element type index of idx_vector<f32quat> ( dt_f32quat )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f32quat> ( dt_idx_vector )
};

// optional_idx_vector<f32quat>
template<> struct value_type_information<optional_idx_vector<f32quat>>
{
	typedef f32quat data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f32quat; // the element type index of optional_idx_vector<f32quat> ( dt_f32quat )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f32quat> ( dt_optional_idx_vector )
};

// f64quat
template<> struct value_type_information<f64quat>
{
	typedef f64quat data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64quat; // the element type index of f64quat ( dt_f64quat )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of f64quat ( dt_none )
};

// optional_value<f64quat>
template<> struct value_type_information<optional_value<f64quat>>
{
	typedef f64quat data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64quat; // the element type index of optional_value<f64quat> ( dt_f64quat )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<f64quat> ( dt_optional_value )
};

// vector<f64quat>
template<> struct value_type_information<vector<f64quat>>
{
	typedef f64quat data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64quat; // the element type index of vector<f64quat> ( dt_f64quat )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<f64quat> ( dt_vector )
};

// optional_vector<f64quat>
template<> struct value_type_information<optional_vector<f64quat>>
{
	typedef f64quat data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64quat; // the element type index of optional_vector<f64quat> ( dt_f64quat )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<f64quat> ( dt_optional_vector )
};

// idx_vector<f64quat>
template<> struct value_type_information<idx_vector<f64quat>>
{
	typedef f64quat data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64quat; // the element type index of idx_vector<f64quat> ( dt_f64quat )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<f64quat> ( dt_idx_vector )
};

// optional_idx_vector<f64quat>
template<> struct value_type_information<optional_idx_vector<f64quat>>
{
	typedef f64quat data_type;
	static constexpr element_type_index type_index = element_type_index::dt_f64quat; // the element type index of optional_idx_vector<f64quat> ( dt_f64quat )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<f64quat> ( dt_optional_idx_vector )
};

// uuid
template<> struct value_type_information<uuid>
{
	typedef uuid data_type;
	static constexpr element_type_index type_index = element_type_index::dt_uuid; // the element type index of uuid ( dt_uuid )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of uuid ( dt_none )
};

// optional_value<uuid>
template<> struct value_type_information<optional_value<uuid>>
{
	typedef uuid data_type;
	static constexpr element_type_index type_index = element_type_index::dt_uuid; // the element type index of optional_value<uuid> ( dt_uuid )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<uuid> ( dt_optional_value )
};

// vector<uuid>
template<> struct value_type_information<vector<uuid>>
{
	typedef uuid data_type;
	static constexpr element_type_index type_index = element_type_index::dt_uuid; // the element type index of vector<uuid> ( dt_uuid )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<uuid> ( dt_vector )
};

// optional_vector<uuid>
template<> struct value_type_information<optional_vector<uuid>>
{
	typedef uuid data_type;
	static constexpr element_type_index type_index = element_type_index::dt_uuid; // the element type index of optional_vector<uuid> ( dt_uuid )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<uuid> ( dt_optional_vector )
};

// idx_vector<uuid>
template<> struct value_type_information<idx_vector<uuid>>
{
	typedef uuid data_type;
	static constexpr element_type_index type_index = element_type_index::dt_uuid; // the element type index of idx_vector<uuid> ( dt_uuid )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<uuid> ( dt_idx_vector )
};

// optional_idx_vector<uuid>
template<> struct value_type_information<optional_idx_vector<uuid>>
{
	typedef uuid data_type;
	static constexpr element_type_index type_index = element_type_index::dt_uuid; // the element type index of optional_idx_vector<uuid> ( dt_uuid )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<uuid> ( dt_optional_idx_vector )
};

// item_ref
template<> struct value_type_information<item_ref>
{
	typedef item_ref data_type;
	static constexpr element_type_index type_index = element_type_index::dt_item_ref; // the element type index of item_ref ( dt_item_ref )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of item_ref ( dt_none )
};

// optional_value<item_ref>
template<> struct value_type_information<optional_value<item_ref>>
{
	typedef item_ref data_type;
	static constexpr element_type_index type_index = element_type_index::dt_item_ref; // the element type index of optional_value<item_ref> ( dt_item_ref )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<item_ref> ( dt_optional_value )
};

// vector<item_ref>
template<> struct value_type_information<vector<item_ref>>
{
	typedef item_ref data_type;
	static constexpr element_type_index type_index = element_type_index::dt_item_ref; // the element type index of vector<item_ref> ( dt_item_ref )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<item_ref> ( dt_vector )
};

// optional_vector<item_ref>
template<> struct value_type_information<optional_vector<item_ref>>
{
	typedef item_ref data_type;
	static constexpr element_type_index type_index = element_type_index::dt_item_ref; // the element type index of optional_vector<item_ref> ( dt_item_ref )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<item_ref> ( dt_optional_vector )
};

// idx_vector<item_ref>
template<> struct value_type_information<idx_vector<item_ref>>
{
	typedef item_ref data_type;
	static constexpr element_type_index type_index = element_type_index::dt_item_ref; // the element type index of idx_vector<item_ref> ( dt_item_ref )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<item_ref> ( dt_idx_vector )
};

// optional_idx_vector<item_ref>
template<> struct value_type_information<optional_idx_vector<item_ref>>
{
	typedef item_ref data_type;
	static constexpr element_type_index type_index = element_type_index::dt_item_ref; // the element type index of optional_idx_vector<item_ref> ( dt_item_ref )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<item_ref> ( dt_optional_idx_vector )
};

// hash
template<> struct value_type_information<hash>
{
	typedef hash data_type;
	static constexpr element_type_index type_index = element_type_index::dt_hash; // the element type index of hash ( dt_hash )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of hash ( dt_none )
};

// optional_value<hash>
template<> struct value_type_information<optional_value<hash>>
{
	typedef hash data_type;
	static constexpr element_type_index type_index = element_type_index::dt_hash; // the element type index of optional_value<hash> ( dt_hash )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<hash> ( dt_optional_value )
};

// vector<hash>
template<> struct value_type_information<vector<hash>>
{
	typedef hash data_type;
	static constexpr element_type_index type_index = element_type_index::dt_hash; // the element type index of vector<hash> ( dt_hash )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<hash> ( dt_vector )
};

// optional_vector<hash>
template<> struct value_type_information<optional_vector<hash>>
{
	typedef hash data_type;
	static constexpr element_type_index type_index = element_type_index::dt_hash; // the element type index of optional_vector<hash> ( dt_hash )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<hash> ( dt_optional_vector )
};

// idx_vector<hash>
template<> struct value_type_information<idx_vector<hash>>
{
	typedef hash data_type;
	static constexpr element_type_index type_index = element_type_index::dt_hash; // the element type index of idx_vector<hash> ( dt_hash )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<hash> ( dt_idx_vector )
};

// optional_idx_vector<hash>
template<> struct value_type_information<optional_idx_vector<hash>>
{
	typedef hash data_type;
	static constexpr element_type_index type_index = element_type_index::dt_hash; // the element type index of optional_idx_vector<hash> ( dt_hash )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<hash> ( dt_optional_idx_vector )
};

// entity_ref
template<> struct value_type_information<entity_ref>
{
	typedef entity_ref data_type;
	static constexpr element_type_index type_index = element_type_index::dt_entity_ref; // the element type index of entity_ref ( dt_entity_ref )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of entity_ref ( dt_none )
};

// optional_value<entity_ref>
template<> struct value_type_information<optional_value<entity_ref>>
{
	typedef entity_ref data_type;
	static constexpr element_type_index type_index = element_type_index::dt_entity_ref; // the element type index of optional_value<entity_ref> ( dt_entity_ref )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<entity_ref> ( dt_optional_value )
};

// vector<entity_ref>
template<> struct value_type_information<vector<entity_ref>>
{
	typedef entity_ref data_type;
	static constexpr element_type_index type_index = element_type_index::dt_entity_ref; // the element type index of vector<entity_ref> ( dt_entity_ref )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<entity_ref> ( dt_vector )
};

// optional_vector<entity_ref>
template<> struct value_type_information<optional_vector<entity_ref>>
{
	typedef entity_ref data_type;
	static constexpr element_type_index type_index = element_type_index::dt_entity_ref; // the element type index of optional_vector<entity_ref> ( dt_entity_ref )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<entity_ref> ( dt_optional_vector )
};

// idx_vector<entity_ref>
template<> struct value_type_information<idx_vector<entity_ref>>
{
	typedef entity_ref data_type;
	static constexpr element_type_index type_index = element_type_index::dt_entity_ref; // the element type index of idx_vector<entity_ref> ( dt_entity_ref )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<entity_ref> ( dt_idx_vector )
};

// optional_idx_vector<entity_ref>
template<> struct value_type_information<optional_idx_vector<entity_ref>>
{
	typedef entity_ref data_type;
	static constexpr element_type_index type_index = element_type_index::dt_entity_ref; // the element type index of optional_idx_vector<entity_ref> ( dt_entity_ref )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<entity_ref> ( dt_optional_idx_vector )
};

// string
template<> struct value_type_information<string>
{
	typedef string data_type;
	static constexpr element_type_index type_index = element_type_index::dt_string; // the element type index of string ( dt_string )
	static constexpr container_type_index container_index = container_type_index::ct_none; // the container type index of string ( dt_none )
};

// optional_value<string>
template<> struct value_type_information<optional_value<string>>
{
	typedef string data_type;
	static constexpr element_type_index type_index = element_type_index::dt_string; // the element type index of optional_value<string> ( dt_string )
	static constexpr container_type_index container_index = container_type_index::ct_optional_value; // the container type index of optional_value<string> ( dt_optional_value )
};

// vector<string>
template<> struct value_type_information<vector<string>>
{
	typedef string data_type;
	static constexpr element_type_index type_index = element_type_index::dt_string; // the element type index of vector<string> ( dt_string )
	static constexpr container_type_index container_index = container_type_index::ct_vector; // the container type index of vector<string> ( dt_vector )
};

// optional_vector<string>
template<> struct value_type_information<optional_vector<string>>
{
	typedef string data_type;
	static constexpr element_type_index type_index = element_type_index::dt_string; // the element type index of optional_vector<string> ( dt_string )
	static constexpr container_type_index container_index = container_type_index::ct_optional_vector; // the container type index of optional_vector<string> ( dt_optional_vector )
};

// idx_vector<string>
template<> struct value_type_information<idx_vector<string>>
{
	typedef string data_type;
	static constexpr element_type_index type_index = element_type_index::dt_string; // the element type index of idx_vector<string> ( dt_string )
	static constexpr container_type_index container_index = container_type_index::ct_idx_vector; // the container type index of idx_vector<string> ( dt_idx_vector )
};

// optional_idx_vector<string>
template<> struct value_type_information<optional_idx_vector<string>>
{
	typedef string data_type;
	static constexpr element_type_index type_index = element_type_index::dt_string; // the element type index of optional_idx_vector<string> ( dt_string )
	static constexpr container_type_index container_index = container_type_index::ct_optional_idx_vector; // the container type index of optional_idx_vector<string> ( dt_optional_idx_vector )
};

}

#ifdef PDS_IMPLEMENTATION
#include "value_types.inl"
#endif//PDS_IMPLEMENTATION
#endif//__PDS__VALUE_TYPES_H__
