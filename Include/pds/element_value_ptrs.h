// WARNING! DO NOT EDIT THIS FILE! This file is generated.

// pds - Persistent data structure framework, Copyright (c) 2022 Ulrik Lindahl
// Licensed under the MIT license https://github.com/Cooolrik/pds/blob/main/LICENSE
#pragma once
#ifndef __PDS__ELEMENT_VALUE_PTRS_H__
#define __PDS__ELEMENT_VALUE_PTRS_H__

#include "element_types.h"

namespace pds
{
// item pointer functions, returns a pointer to the first item of each type

inline i8 *value_ptr( i8 &value ) { return &value; }
inline const i8 *value_ptr( const i8 &value ) { return &value; }
inline i16 *value_ptr( i16 &value ) { return &value; }
inline const i16 *value_ptr( const i16 &value ) { return &value; }
inline i32 *value_ptr( i32 &value ) { return &value; }
inline const i32 *value_ptr( const i32 &value ) { return &value; }
inline i64 *value_ptr( i64 &value ) { return &value; }
inline const i64 *value_ptr( const i64 &value ) { return &value; }

inline u8 *value_ptr( u8 &value ) { return &value; }
inline const u8 *value_ptr( const u8 &value ) { return &value; }
inline u16 *value_ptr( u16 &value ) { return &value; }
inline const u16 *value_ptr( const u16 &value ) { return &value; }
inline u32 *value_ptr( u32 &value ) { return &value; }
inline const u32 *value_ptr( const u32 &value ) { return &value; }
inline u64 *value_ptr( u64 &value ) { return &value; }
inline const u64 *value_ptr( const u64 &value ) { return &value; }

inline f32 *value_ptr( f32 &value ) { return &value; }
inline const f32 *value_ptr( const f32 &value ) { return &value; }
inline f64 *value_ptr( f64 &value ) { return &value; }
inline const f64 *value_ptr( const f64 &value ) { return &value; }

inline i8 *value_ptr( i8vec2 &value ) { return value.data(); }
inline const i8 *value_ptr( const i8vec2 &value ) { return value.data(); }
inline i8 *value_ptr( i8vec3 &value ) { return value.data(); }
inline const i8 *value_ptr( const i8vec3 &value ) { return value.data(); }
inline i8 *value_ptr( i8vec4 &value ) { return value.data(); }
inline const i8 *value_ptr( const i8vec4 &value ) { return value.data(); }
inline i16 *value_ptr( i16vec2 &value ) { return value.data(); }
inline const i16 *value_ptr( const i16vec2 &value ) { return value.data(); }
inline i16 *value_ptr( i16vec3 &value ) { return value.data(); }
inline const i16 *value_ptr( const i16vec3 &value ) { return value.data(); }
inline i16 *value_ptr( i16vec4 &value ) { return value.data(); }
inline const i16 *value_ptr( const i16vec4 &value ) { return value.data(); }
inline i32 *value_ptr( i32vec2 &value ) { return value.data(); }
inline const i32 *value_ptr( const i32vec2 &value ) { return value.data(); }
inline i32 *value_ptr( i32vec3 &value ) { return value.data(); }
inline const i32 *value_ptr( const i32vec3 &value ) { return value.data(); }
inline i32 *value_ptr( i32vec4 &value ) { return value.data(); }
inline const i32 *value_ptr( const i32vec4 &value ) { return value.data(); }
inline i64 *value_ptr( i64vec2 &value ) { return value.data(); }
inline const i64 *value_ptr( const i64vec2 &value ) { return value.data(); }
inline i64 *value_ptr( i64vec3 &value ) { return value.data(); }
inline const i64 *value_ptr( const i64vec3 &value ) { return value.data(); }
inline i64 *value_ptr( i64vec4 &value ) { return value.data(); }
inline const i64 *value_ptr( const i64vec4 &value ) { return value.data(); }

inline u8 *value_ptr( u8vec2 &value ) { return value.data(); }
inline const u8 *value_ptr( const u8vec2 &value ) { return value.data(); }
inline u8 *value_ptr( u8vec3 &value ) { return value.data(); }
inline const u8 *value_ptr( const u8vec3 &value ) { return value.data(); }
inline u8 *value_ptr( u8vec4 &value ) { return value.data(); }
inline const u8 *value_ptr( const u8vec4 &value ) { return value.data(); }
inline u16 *value_ptr( u16vec2 &value ) { return value.data(); }
inline const u16 *value_ptr( const u16vec2 &value ) { return value.data(); }
inline u16 *value_ptr( u16vec3 &value ) { return value.data(); }
inline const u16 *value_ptr( const u16vec3 &value ) { return value.data(); }
inline u16 *value_ptr( u16vec4 &value ) { return value.data(); }
inline const u16 *value_ptr( const u16vec4 &value ) { return value.data(); }
inline u32 *value_ptr( u32vec2 &value ) { return value.data(); }
inline const u32 *value_ptr( const u32vec2 &value ) { return value.data(); }
inline u32 *value_ptr( u32vec3 &value ) { return value.data(); }
inline const u32 *value_ptr( const u32vec3 &value ) { return value.data(); }
inline u32 *value_ptr( u32vec4 &value ) { return value.data(); }
inline const u32 *value_ptr( const u32vec4 &value ) { return value.data(); }
inline u64 *value_ptr( u64vec2 &value ) { return value.data(); }
inline const u64 *value_ptr( const u64vec2 &value ) { return value.data(); }
inline u64 *value_ptr( u64vec3 &value ) { return value.data(); }
inline const u64 *value_ptr( const u64vec3 &value ) { return value.data(); }
inline u64 *value_ptr( u64vec4 &value ) { return value.data(); }
inline const u64 *value_ptr( const u64vec4 &value ) { return value.data(); }

inline f32 *value_ptr( f32vec2 &value ) { return value.data(); }
inline const f32 *value_ptr( const f32vec2 &value ) { return value.data(); }
inline f32 *value_ptr( f32vec3 &value ) { return value.data(); }
inline const f32 *value_ptr( const f32vec3 &value ) { return value.data(); }
inline f32 *value_ptr( f32vec4 &value ) { return value.data(); }
inline const f32 *value_ptr( const f32vec4 &value ) { return value.data(); }
inline f64 *value_ptr( f64vec2 &value ) { return value.data(); }
inline const f64 *value_ptr( const f64vec2 &value ) { return value.data(); }
inline f64 *value_ptr( f64vec3 &value ) { return value.data(); }
inline const f64 *value_ptr( const f64vec3 &value ) { return value.data(); }
inline f64 *value_ptr( f64vec4 &value ) { return value.data(); }
inline const f64 *value_ptr( const f64vec4 &value ) { return value.data(); }

inline f32 *value_ptr( f32mat2 &value ) { return value.data(); }
inline const f32 *value_ptr( const f32mat2 &value ) { return value.data(); }
inline f32 *value_ptr( f32mat3 &value ) { return value.data(); }
inline const f32 *value_ptr( const f32mat3 &value ) { return value.data(); }
inline f32 *value_ptr( f32mat4 &value ) { return value.data(); }
inline const f32 *value_ptr( const f32mat4 &value ) { return value.data(); }
inline f64 *value_ptr( f64mat2 &value ) { return value.data(); }
inline const f64 *value_ptr( const f64mat2 &value ) { return value.data(); }
inline f64 *value_ptr( f64mat3 &value ) { return value.data(); }
inline const f64 *value_ptr( const f64mat3 &value ) { return value.data(); }
inline f64 *value_ptr( f64mat4 &value ) { return value.data(); }
inline const f64 *value_ptr( const f64mat4 &value ) { return value.data(); }

inline f32 *value_ptr( f32quat &value ) { return value.data(); }
inline const f32 *value_ptr( const f32quat &value ) { return value.data(); }
inline f64 *value_ptr( f64quat &value ) { return value.data(); }
inline const f64 *value_ptr( const f64quat &value ) { return value.data(); }

inline uuid *value_ptr( uuid &value ) { return &value; }
inline const uuid *value_ptr( const uuid &value ) { return &value; }
inline hash *value_ptr( hash &value ) { return &value; }
inline const hash *value_ptr( const hash &value ) { return &value; }
inline string *value_ptr( string &value ) { return &value; }
inline const string *value_ptr( const string &value ) { return &value; }
}
// namespace pds

#endif//__PDS__ELEMENT_VALUE_PTRS_H__
